class Solution {
public:
    // const int MOD = 1e9 + 7;

    // int valueAfterKSeconds(int n, int k) {
    //     vector<vector<int>> dp(k + 1, vector<int>(n, 0));

    //     for (int i = 0; i < n; i++)
    //         dp[0][i] = 1;

    //     for (int s = 1; s <= k; s++) {
    //         dp[s][0] = 1;
    //         for (int i = 1; i < n; i++) {
    //             dp[s][i] = (dp[s][i - 1] + dp[s - 1][i]) % MOD;
    //         }
    //     }

    //     return dp[k][n - 1];
    // }
    const int MOD = 1e9 + 7;

    int valueAfterKSeconds(int n, int k) {
        vector<int> dp(n, 1); // Base case: dp[0][i] = 1

        for (int s = 1; s <= k; s++) {
            for (int i = 1; i < n; i++) {
                dp[i] = (dp[i] + dp[i - 1]) % MOD; // Prefix sum
            }
        }

        return dp[n - 1];
    }
};
