class Solution {
public:
    int maxArea(vector<int>& height) {

   //---------------------- TIME COMPLEXITY IS O(N^2).--------------

    // int l = 0; 
    // int h = 0;
    // int maxArea = 0;
    // for (int i = 0; i < height.size(); i++) {
    //     int sH = height[i];
    //     for (int j = i + 1; j < height.size(); j++) {
    //         int eH = height[j]; 
    //         int length = j - i;
    //         int area = min(sH, eH) * length;

    //         maxArea = max(area, maxArea); 
    //     }
    // }
    // return maxArea;

    //------------------TIME COMPLEXITY IS O(N).------------------
    int l =0;
    int r = height.size()-1;
    int maxi =-1;
    while(l<r)
    {
        int minv = min(height[l], height[r]);
        int val = minv * (r-l);
        if(val > maxi)
            maxi = val;
        
        if(height[l] <= height[r])
            l++;
        else 
            r--;
    }
    return maxi;  
}
};
