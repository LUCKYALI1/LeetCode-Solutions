long long countBadPairs(vector<int>& nums) {
        // int count = 0;
        // for(int i = 0; i < nums.size()-1 ; i++){
        //     int j = i + 1;
        //     while(j < nums.size()){
        //         if(i < j &&  nums[i] -i != nums[j] - j){
        //             count++;
        //         }
        //          j++;
        //     }
        // }
        // return count;


        long long n = nums.size();
        long long totalPairs = (n * (n - 1)) / 2;
        unordered_map<int, long long> freq;
        long long goodPairs = 0;

        for (int i = 0; i < n; i++) {
            int key = nums[i] - i;
            if (freq.find(key) != freq.end()) {
                goodPairs += freq[key]; 
            }
            freq[key]++; 
        }
        return totalPairs - goodPairs;
    }
