#include <iostream>
#include <vector>
#include <queue>

using namespace std;

class Solution {
public:
    int minOperations(vector<int>& nums, int k) {
        priority_queue<int, vector<int>, greater<int>> pq; // Min-heap
        for (int num : nums) {
            if (num < k) pq.push(num);
        }

        int operations = 0;

        while (!pq.empty()) {
            int x = pq.top(); pq.pop();
            operations++;

            if (pq.empty()) break; // If only one element was there, stop.

            int y = pq.top(); pq.pop();
            long long newValue = 2LL * x + y;

            if (newValue < k) pq.push(newValue);
        }

        return operations;
    }
};

int main() {
    vector<int> nums = {1, 2, 3, 9, 10, 12};
    int k = 7;
    Solution sol;
    cout
